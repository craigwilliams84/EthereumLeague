var gulp = require('gulp'),
  webserver = require('gulp-webserver'),
  del = require('del'),
  jshint = require('gulp-jshint'),
  sourcemaps = require('gulp-sourcemaps'),
  browserify = require('browserify'),
  source = require('vinyl-source-stream'),
  buffer = require('vinyl-buffer'),
  uglify = require('gulp-uglify'),
  gutil = require('gulp-util'),
  sequence = require('run-sequence'),
  ngAnnotate = require('browserify-ngannotate');
  exec = require('child_process').exec;

var CacheBuster = require('gulp-cachebust');
var cachebust = new CacheBuster();

/////////////////////////////////////////////////////////////////////////////////////
//
// cleans the build output
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('clean', function (cb) {
  del([
    'dist'
  ], cb);
});

/////////////////////////////////////////////////////////////////////////////////////
//
// Copy css
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('build-css', ['clean', 'build-bootstrap-css'], function() {
  return gulp.src('./app/css/*')
    .pipe(gulp.dest('./dist/css/'));
});

/////////////////////////////////////////////////////////////////////////////////////
//
// Copy bootstrap css
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('build-bootstrap-css', ['clean'], function() {
  return gulp.src('./node_modules/bootstrap/dist/css/bootstrap.min.*')
    .pipe(gulp.dest('./dist/css/'));
});

/////////////////////////////////////////////////////////////////////////////////////
//
// Copy bootstrap fonts
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('build-bootstrap-fonts', ['clean'], function() {
  return gulp.src('./node_modules/bootstrap/dist/fonts/*')
    .pipe(gulp.dest('./dist/fonts/'));
});

/////////////////////////////////////////////////////////////////////////////////////
//
// Copy images
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('build-images', ['clean'], function() {
  return gulp.src('./app/img/**/*')
    .pipe(gulp.dest('./dist/img/'));
});

/////////////////////////////////////////////////////////////////////////////////////
//
// Build a minified Javascript bundle - the order of the js files is determined
// by browserify
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('build-js', function() {
  var b = browserify({
    entries: './app/js/app.js',
    debug: true,
    paths: ['./app/js'],
    transform: [ngAnnotate]
  });

  return b.bundle()
    .pipe(source('bundle.js'))
    .pipe(buffer())
    //.pipe(cachebust.resources())
    //.pipe(sourcemaps.init({loadMaps: true}))
    //.pipe(uglify())
    .on('error', gutil.log)
    //.pipe(sourcemaps.write('./'))
    .pipe(gulp.dest('./dist/js/'));
});

/////////////////////////////////////////////////////////////////////////////////////
//
// Build the solidity contracts using truffle
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('build-contracts', function (cb) {
  exec('truffle compile', function (err, stdout, stderr) {
    console.log(stdout);
    console.log(stderr);
    cb(err);
  });
});

/////////////////////////////////////////////////////////////////////////////////////
//
// Build the html
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('build-html', ['clean'], function() {
  return gulp.src(['./app/*.html'])
    .pipe(cachebust.references())
    .pipe(gulp.dest('dist'));
});

/////////////////////////////////////////////////////////////////////////////////////
//
// full build
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('build', [], function(cb) {
  return sequence(['clean', 'build-html', 'build-bootstrap-fonts', 'build-css', 'build-images', 'build-js'] , cb);
});

/////////////////////////////////////////////////////////////////////////////////////
//
// watches file system and triggers a build when a modification is detected
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('watch', function() {
  return gulp.watch(['./app/*.html', './app/css/*.*css', './app/js/**/*.js'], ['build']);
});

/////////////////////////////////////////////////////////////////////////////////////
//s
// launches a web server that serves files in the current directory
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('serve', ['watch','build'], function() {
  gulp.src('./dist/')
    .pipe(webserver({
      port: 8000,
      livereload: false,
      directoryListing: false
    }));
});

/////////////////////////////////////////////////////////////////////////////////////
//
// launch a build upon modification and publish it to a running server
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('dev', ['watch', 'serve']);

/////////////////////////////////////////////////////////////////////////////////////
//
// installs and builds everything
//
/////////////////////////////////////////////////////////////////////////////////////

gulp.task('default', ['build']);